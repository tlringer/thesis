\begin{thebibliography}{10}

\bibitem{hints}
Coq reference manual, section 8.9: Controlling automation, 2017.

\bibitem{lean}
Lean theorem prover, 2017.

\bibitem{usera}
User A.
\newblock Software foundations solution, 2017.

\bibitem{angiuli2020internalizing}
Carlo Angiuli, Evan Cavallo, Anders Mörtberg, and Max Zeuner.
\newblock Internalizing representation independence with univalence, 2020.

\bibitem{Autexier:2010:CMH:1986659.1986663}
Serge Autexier, Dieter Hutter, and Till Mossakowski.
\newblock Verification, induction termination analysis.
\newblock chapter Change Management for Heterogeneous Development Graphs, pages
  54--80. Springer-Verlag, Berlin, Heidelberg, 2010.

\bibitem{userb}
User B.
\newblock Software foundations solution, 2017.

\bibitem{Barendregt2002}
Henk Barendregt and Erik Barendsen.
\newblock Autarkic computations in formal proofs.
\newblock {\em Journal of Automated Reasoning}, 28(3):321--336, 2002.

\bibitem{Barendregt2351}
Henk Barendregt and Freek Wiedijk.
\newblock The challenge of computer mathematics.
\newblock {\em Philosophical Transactions of the Royal Society of London A:
  Mathematical, Physical and Engineering Sciences}, 363(1835):2351--2375, 2005.

\bibitem{boutillier:tel-01054723}
Pierre Boutillier.
\newblock {\em {New tool to compute with inductive in Coq}}.
\newblock Theses, {Universit{\'e} Paris-Diderot - Paris VII}, February 2014.

\bibitem{Celik:2017:IRP:3155562.3155588}
Ahmet Celik, Karl Palmskog, and Milos Gligoric.
\newblock icoq: Regression proof selection for large-scale verification
  projects.
\newblock In {\em Proceedings of the 32Nd IEEE/ACM International Conference on
  Automated Software Engineering}, ASE 2017, pages 171--182, Piscataway, NJ,
  USA, 2017. IEEE Press.

\bibitem{chlipala:cpdt}
Adam Chlipala.
\newblock {\em Certified Programming with Dependent Types - {A} Pragmatic
  Introduction to the Coq Proof Assistant}.
\newblock {MIT} Press, 2013.

\bibitem{equality}
Adam Chlipala.
\newblock Library equality, 2017.

\bibitem{cohen:hal-01113453}
Cyril Cohen, Maxime D{\'e}n{\`e}s, and Anders M{\"o}rtberg.
\newblock {Refinements for Free!}
\newblock In {\em {Certified Programs and Proofs}}, pages 147 -- 162,
  Melbourne, Australia, December 2013.

\bibitem{coq}
{Coq Development Team}.
\newblock The {Coq} proof assistant, 1989-2021.

\bibitem{coquand:inria-00076024}
T.~Coquand and G{\'e}rard Huet.
\newblock {The calculus of constructions}.
\newblock Technical Report RR-0530, {INRIA}, May 1986.

\bibitem{inductive}
Thierry Coquand and Christine Paulin.
\newblock Inductively defined types.
\newblock In Per Martin-L{\"o}f and Grigori Mints, editors, {\em COLOG-88},
  pages 50--66, Berlin, Heidelberg, 1990. Springer Berlin Heidelberg.

\bibitem{DeMillo1977}
Richard~A. DeMillo, Richard~J. Lipton, and Alan~J. Perlis.
\newblock Social processes and proofs of theorems and programs.
\newblock In {\em Proceedings of the 4th ACM SIGACT-SIGPLAN Symposium on
  Principles of Programming Languages}, POPL '77, pages 206--214, New York, NY,
  USA, 1977. ACM.

\bibitem{Frana2011}
Ricardo~Bedin Fran{\c{c}}a, Denis Favre-Felix, Xavier Leroy, Marc Pantel, and
  Jean Souyris.
\newblock {Towards Formally Verified Optimizing Compilation in Flight Control
  Software}.
\newblock In {\em Bringing Theory to Practice: Predictability and Performance
  in Embedded Systems}, volume~18 of {\em OpenAccess Series in Informatics
  (OASIcs)}, pages 59--68, Dagstuhl, Germany, 2011. Schloss
  Dagstuhl--Leibniz-Zentrum fuer Informatik.

\bibitem{DBLP:journals/ftpl/GulwaniPS17}
Sumit Gulwani, Oleksandr Polozov, and Rishabh Singh.
\newblock Program synthesis.
\newblock {\em Foundations and Trends in Programming Languages}, 4(1-2):1--119,
  2017.

\bibitem{Hofmann97}
Martin Hofmann.
\newblock Syntax and semantics of dependent types.
\newblock In {\em Semantics and Logics of Computation}, pages 79--130.
  Cambridge University Press, 1997.

\bibitem{hollight}
{HOL Light Development Team}.
\newblock {HOL Light}, 1996-2021.

\bibitem{873647}
D.~Hutter.
\newblock Management of change in structured verification.
\newblock In {\em ASE 2000}, pages 23--31, Sept 2000.

\bibitem{isabelle}
{Isabelle Development Team}.
\newblock Isabelle, 1994-2021.

\bibitem{Kaestner2017}
Daniel K{\"a}stner, Xavier Leroy, Sandrine Blazy, Bernhard Schommer, Michael
  Schmidt, and Christian Ferdinand.
\newblock Closing the gap -- the formally verified optimizing compiler
  {CompCert}.
\newblock In {\em {SSS'17: Safety-critical Systems Symposium 2017}},
  Developments in System Safety Engineering: Proceedings of the Twenty-fifth
  Safety-critical Systems Symposium, pages 163--180, Bristol, United Kingdom,
  February 2017. {CreateSpace}.

\bibitem{Klein2014micro}
Gerwin Klein, June Andronick, Kevin Elphinstone, Toby Murray, Thomas Sewell,
  Rafal Kolanski, and Gernot Heiser.
\newblock Comprehensive formal verification of an {OS} microkernel.
\newblock {\em ACM Trans. Comput. Syst.}, 32(1):2:1--2:70, February 2014.

\bibitem{Klein2009}
Gerwin Klein, Kevin Elphinstone, Gernot Heiser, June Andronick, David Cock,
  Philip Derrin, Dhammika Elkaduwe, Kai Engelhardt, Rafal Kolanski, Michael
  Norrish, Thomas Sewell, Harvey Tuch, and Simon Winwood.
\newblock {seL4}: Formal verification of an {OS} kernel.
\newblock In {\em Proceedings of the ACM SIGOPS 22Nd Symposium on Operating
  Systems Principles}, SOSP '09, pages 207--220, New York, NY, USA, 2009. ACM.

\bibitem{ko2016programming}
Hsiang-Shang Ko and Jeremy Gibbons.
\newblock Programming with ornaments.
\newblock {\em Journal of Functional Programming}, 27, 2016.

\bibitem{Leroy:POPL06}
Xavier Leroy.
\newblock Formal certification of a compiler back-end or: Programming a
  compiler with a proof assistant.
\newblock In {\em Conference Record of the 33rd ACM SIGPLAN-SIGACT Symposium on
  Principles of Programming Languages}, POPL '06, pages 42--54, New York, NY,
  USA, 2006. ACM.

\bibitem{Leroy2009}
Xavier Leroy.
\newblock Formal verification of a realistic compiler.
\newblock {\em Commun. ACM}, 52(7):107--115, July 2009.

\bibitem{compcertcommit}
Xavier Leroy.
\newblock Commit to compcert: lib/integers.v, 2013.

\bibitem{coq84commit}
letouzey.
\newblock Commit to coq: change definition of divide (compat with znumtheory),
  2011.

\bibitem{magaud2000changing}
Nicolas Magaud and Yves Bertot.
\newblock Changing data structures in type theory: A study of natural numbers.
\newblock In {\em International Workshop on Types for Proofs and Programs},
  pages 181--196. Springer, 2000.

\bibitem{mcbride}
Conor McBride.
\newblock Ornamental algebras, algebraic ornaments, 2011.

\bibitem{coq87commit}
Guillaume Melquiond.
\newblock Commit to coq: Make izr use a compact representation of integers,
  2017.

\bibitem{murraybp}
Toby Murray and P.~C. van Oorschot.
\newblock {BP}: Formal proofs, the fine print and side effects.
\newblock In {\em IEEE Cybersecurity Development (SecDev)}, pages 1--10, Sep.
  2018.

\bibitem{nlab:beta-reduction}
{nLab authors}.
\newblock beta-reduction.
\newblock \url{http://ncatlab.org/nlab/show/beta-reduction}, July 2020.
\newblock \href{http://ncatlab.org/nlab/revision/beta-reduction/6}{Revision 6}.

\bibitem{nlab:eta-conversion}
{nLab authors}.
\newblock eta-conversion.
\newblock \url{http://ncatlab.org/nlab/show/eta-conversion}, July 2020.
\newblock \href{http://ncatlab.org/nlab/revision/eta-conversion/12}{Revision
  12}.

\bibitem{software-foundations}
Benjamin~C. Pierce, Arthur~Azevedo de~Amorim, Chris Casinghino, Marco Gaboardi,
  Michael Greenberg, Cat\v{a}lin Hri\c{t}cu, Vilhelm Sj\"{o}berg, and Brent
  Yorgey.
\newblock {\em Software Foundations}.
\newblock Electronic textbook, 2016.
\newblock Version 4.0. \texttt{http://www.cis.upenn.edu/~bcpierce/sf}.

\bibitem{PGL-045}
Talia Ringer, Karl Palmskog, Ilya Sergey, Milos Gligoric, and Zachary Tatlock.
\newblock Qed at large: A survey of engineering of formally verified software.
\newblock {\em Foundations and Trends® in Programming Languages},
  5(2-3):102--281, 2019.

\bibitem{pumpkin-git}
Talia Ringer and Nathaniel Yazdani.
\newblock Pumpkin-git, 2018.

\bibitem{robert2018}
Valentin Robert.
\newblock {\em Front-end tooling for building and maintaining dependently-typed
  functional programs}.
\newblock PhD thesis, UC San Diego, 2018.

\bibitem{sozeau:equations}
Matthieu Sozeau.
\newblock Equations: A dependent pattern-matching compiler.
\newblock In Matt Kaufmann and Lawrence~C. Paulson, editors, {\em Interactive
  Theorem Proving}, pages 419--434, Berlin, Heidelberg, 2010. Springer Berlin
  Heidelberg.

\bibitem{tabareau2017equivalences}
Nicolas Tabareau, \'{E}ric Tanter, and Matthieu Sozeau.
\newblock Equivalences for free: Univalent parametricity for effective
  transport.
\newblock {\em Proc. ACM Program. Lang.}, 2(ICFP):92:1--92:29, July 2018.

\bibitem{tabareau2019marriage}
Nicolas Tabareau, Éric Tanter, and Matthieu Sozeau.
\newblock The marriage of univalence and parametricity, 2019.

\bibitem{Timany2015FirstST}
Amin Timany and Bart Jacobs.
\newblock First steps towards cumulative inductive types in {CIC}.
\newblock In {\em ICTAC}, 2015.

\bibitem{univalent2013homotopy}
{Univalent Foundations Program}.
\newblock {\em Homotopy Type Theory: Univalent Foundations of Mathematics}.
\newblock Institute for Advanced Study, 2013.

\bibitem{wibergh2019}
Karin Wibergh.
\newblock Automatic refactoring for agda.
\newblock Master's thesis, Chalmers University of Technology and University of
  Gothenburg, 2019.

\bibitem{Yang2011}
Xuejun Yang, Yang Chen, Eric Eide, and John Regehr.
\newblock Finding and understanding bugs in {C} compilers.
\newblock In {\em Proceedings of the 32nd ACM SIGPLAN Conference on Programming
  Language Design and Implementation}, PLDI '11, pages 283--294, New York, NY,
  USA, 2011. ACM.

\end{thebibliography}
